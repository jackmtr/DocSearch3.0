@model IPagedList<PublicVM>

@{
    ViewBag.Title = "Westland Archive System";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id ="main-row" class="row">

    <div id="public_navigation" class="col-sm-2" style="background-color:pink;">
        
        <div class="row">
            
            <div class="col-md-6">
                <h4>Category/Policy</h4>

                <!-- Rounded switch -->
                <label class="switch">
                    <input type="checkbox" id="category_policy_toggle">
                    <div class="slider round"></div>
                </label>
            </div>

            <div class="col-md-6 buttondiv">
                @Ajax.ActionLink("Clear Search", "Index", new
       {
           publicId = Model.First().Folder_ID
       }, new AjaxOptions
       {
           HttpMethod = "GET",
           InsertionMode = InsertionMode.Replace,
           UpdateTargetId = "public_table"
           //,
           //OnComplete = "clear_fields();" will need to clear form fields
       }, new { @class = "button" })
            </div>

        </div>

        
        <div class="row">
            <div class="col-md-12">


                @* Need a better way to place this JS *@
                <script type="text/javascript">
                    function postNavbar() {
                        $this = $(this);
                        console.log($this.data("subclass"));
                        $('#public_table').removeClass().addClass($this.data("subclass"));
                    };
                </script>

                <div id="category_section">
                    <h4>Categories</h4>
                    <ul id="category_list">
                        @foreach (var item in Model.GroupBy(m => m.CategoryName).Select(g => g.First())){
                            <li>
                                @* Should eventually turn these ajax actionlinks into html actionlinks and make a more customizable ajax call though otf.js *@
                                @Ajax.ActionLink(item.CategoryName, "Index", new
                           {
                               publicId = item.Folder_ID,
                               category = item.CategoryName
                           }, new AjaxOptions
                           {
                               HttpMethod = "GET",
                               InsertionMode = InsertionMode.Replace,
                               UpdateTargetId = "public_table",
                               OnComplete = "postNavbar"
                           }, new
                           {
                               data_subclass = "category"
                           })
                                <ul id="docType_list">
                                    @foreach (var category in Model.Where(m => m.CategoryName == item.CategoryName).GroupBy(m => m.DocumentTypeName).Select(g => g.First()))
                                    {
                                        <li>
                                            @Ajax.ActionLink(category.DocumentTypeName, "Index", new
                                       {
                                           publicId = category.Folder_ID,
                                           documentTypeName = category.DocumentTypeName
                                       }, new AjaxOptions
                                       {
                                           HttpMethod = "GET",
                                           InsertionMode = InsertionMode.Replace,
                                           UpdateTargetId = "public_table",
                                           OnComplete = "postNavbar"
                                       }, new
                                       {
                                           data_subclass = "doctype"
                                       })
                                        </li>
                                    }
                                </ul>
                            </li>
                        }
                    </ul>
                </div>
                
                <div id="policy_section" class="hidden">
                    <h4>Policies</h4>
                    <ul id="policy_list" >
                        @foreach (var policy in Model.GroupBy(m => m.RefNumber).Select(g => g.First()))
                        {
                            if (policy.RefNumber.Length >= 1)
                            {
                                <li>
                                    @*<a href="#">@policy.RefNumber</a>*@
                                    @Ajax.ActionLink(policy.RefNumber, "Index", new
                               {
                                   publicId = policy.Folder_ID,
                                   policyNumber = policy.RefNumber
                               }, new AjaxOptions
                               {
                                   HttpMethod = "GET",
                                   InsertionMode = InsertionMode.Replace,
                                   UpdateTargetId = "public_table",
                                   OnComplete = "postNavbar"
                               }, new
                               {
                                   data_subclass = "policy"
                               })
                                </li>
                            }
                        }
                    </ul>
                </div>
                
            </div>

        </div>


    </div>

    <div id="public_info" class="col-sm-10" style="background-color:papayawhip;">
        
        <div class="row">
            <div class="col-md-6">
                <h3>Name: @TempData["Client_Name"]</h3>
            </div>
            <div class="col-md-6">
                <h3>ID: @TempData["Client_Id"]</h3>
            </div>
        </div>

        <!--Search Box-->
        <div class="row">
            <form method="get" action="@Url.Action("Index")" data-otf-ajax="true" data-otf-target="#public_table">
                <div class="col-md-4">
                    @*<label for="search">Search Description: </label>*@
                    Search Description: 
                    <input id="search" type="hidden" name="publicId" value="@Model.First().Folder_ID" />
                    <input type="search" name="searchTerm" />
                </div>
                <div class="col-md-3">
                    Low Range Date: 
                    @Html.TextBox("IssueDateMinRange", String.Format("{0:d}", Model.OrderBy(d => d.IssueDate).First().IssueDate.Value.ToShortDateString()), new { @class = "datefield", type = "date" })
                </div>
                <div class="col-md-3">
                    High Range Date: 
                    @Html.TextBox("IssueDateMaxRange", String.Format("{0:d}", Model.OrderByDescending(d => d.IssueDate).First().IssueDate.Value.ToShortDateString()), new { @class = "datefield", type = "date" })
                </div>
                <div class="col-md-2">
                    <input type="submit" value="Search and Filter" />
                </div>
            </form>
        </div>
       
        <!--Easy way of doing ajax call, but not as easily customizable-->
        @*@using (Ajax.BeginForm("Index", "PublicVM", null,
                new AjaxOptions
                {
                    HttpMethod = "get",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "public_table"
                }))
        {
            <input type="hidden" name="publicId" value="@Model.First().Folder_ID" />
            <input type="search" name="searchTerm" />
            <input type="submit" value="Search Description" />
        }*@

        <!--Below is the synchronous way of making the search, probably wont use-->
        @*<form method="get">
            <input type="hidden" name="publicId" value="@Model.First().Folder_ID" />
            <input type="search" name="searchTerm" />
            <input type="submit" value="Search" />
        </form>*@ <!--Should do using html helpers over basic html-->

        @*@using (Html.BeginForm("Index", "PublicVM", FormMethod.Get)) {
            @Html.Hidden("Folder_Id")
            @Html.TextBox("searchTerm")
            <input type="submit" value="Search" />
        }*@

        @Html.Partial("_PublicTable", Model)

    </div>
</div>

@section CustomScripts{
    <script>
        (function () {
            $('#category_policy_toggle').click(function () {
                $("#category_section, #policy_section").toggleClass("hidden");
            })
        })();
    </script>  
}