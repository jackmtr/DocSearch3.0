@model IPagedList<PublicVM>
@*@model IEnumerable<DocSearch2._1.ViewModels.PublicVM>*@

@{
    ViewBag.Title = "Westland Archive System";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="body">

    <div id="public_navigation">

        <p>Category/Policy</p>
        <!-- Rounded switch -->
        <label class="switch">
            <input type="checkbox" id="category_policy_toggle">
            <div class="slider round"></div>
        </label>

        @Ajax.ActionLink("Clear Search", "Index", new
            {
                publicId = Model.First().Folder_ID }, new AjaxOptions
                {
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "publicTable"
                    //,
                    //OnComplete = "clear_fields();" will need to clear form fields
                }) 

        @* Need a better way to place this JS *@
        <script type="text/javascript">
            function postNavbar() {
                $this = $(this);
                console.log($this.data("subclass"));
                $('#publicTable').removeClass().addClass($this.data("subclass"));
            };
        </script>

        <ul id="category_list">
            <li>Category</li>
            @foreach (var item in Model.GroupBy(m => m.CategoryName).Select(g => g.First()))
            {
                <li>
                    @* Should eventually turn these ajax actionlinks into html actionlinks and make a more customizable ajax call though otf.js *@
                    @Ajax.ActionLink(item.CategoryName, "Index", new
               {
                   publicId = item.Folder_ID,
                   category = item.CategoryName
               }, new AjaxOptions
               {
                   HttpMethod = "GET",
                   InsertionMode = InsertionMode.Replace,
                   UpdateTargetId = "publicTable",
                   OnComplete = "postNavbar"
               }, new {
                   data_subclass = "category"
               })
                    <ul>
                        @foreach (var category in Model.Where(m => m.CategoryName == item.CategoryName).GroupBy(m => m.DocumentTypeName).Select(g => g.First()))
                        {
                            <li>
                                @Ajax.ActionLink(category.DocumentTypeName, "Index", new
                           {
                               publicId = category.Folder_ID,
                               documentTypeName = category.DocumentTypeName
                           }, new AjaxOptions
                           {
                               HttpMethod = "GET",
                               InsertionMode = InsertionMode.Replace,
                               UpdateTargetId = "publicTable",
                               OnComplete = "postNavbar"
                           }, new
                           {
                               data_subclass = "doctype"
                           })
                            </li>
                        }
                    </ul>
                </li>
            }
        </ul>

        <ul id="policy_list" class="hidden">
            <li>Policy Number</li>
            @foreach (var policy in Model.GroupBy(m => m.RefNumber).Select(g => g.First()))
            {
                <li>
                    @*<a href="#">@policy.RefNumber</a>*@
                    @Ajax.ActionLink(policy.RefNumber, "Index", new
               {
                   publicId = policy.Folder_ID,
                   policyNumber = policy.RefNumber
               }, new AjaxOptions
               {
                   HttpMethod = "GET",
                   InsertionMode = InsertionMode.Replace,
                   UpdateTargetId = "publicTable",
                   OnComplete = "postNavbar"
               }, new
               {
                   data_subclass = "policy"
               })
                </li>
            }
        </ul>

    </div>

    <div id="public_info">
        <h2>Name: @TempData["Client_Name"]</h2>
        <h2>ID: @TempData["Client_Id"]</h2>

        <!--Search Box-->
        <form method="get" action="@Url.Action("Index")" data-otf-ajax="true" data-otf-target="#publicTable">
            <label for="search">Search Description: </label>
            <input id="search" type="hidden" name="publicId" value="@Model.First().Folder_ID" />
            <input type="search" name="searchTerm" />
            Low Range Date
            @Html.TextBox("IssueDateMinRange", String.Format("{0:d}", Model.OrderBy(d => d.IssueDate).First().IssueDate.Value.ToShortDateString()), new { @class = "datefield", type = "date" })
            High Range Date
            @Html.TextBox("IssueDateMaxRange", String.Format("{0:d}", Model.OrderByDescending(d => d.IssueDate).First().IssueDate.Value.ToShortDateString()), new { @class = "datefield", type = "date" })
            <input type="submit" value="Search and Filter" />
        </form>

        <!--Easy way of doing ajax call, but not as easily customizable-->
        @*@using (Ajax.BeginForm("Index", "PublicVM", null,
                new AjaxOptions
                {
                    HttpMethod = "get",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "public_table"
                }))
        {
            <input type="hidden" name="publicId" value="@Model.First().Folder_ID" />
            <input type="search" name="searchTerm" />
            <input type="submit" value="Search Description" />
        }*@

        <!--Below is the synchronous way of making the search, probably wont use-->
        @*<form method="get">
            <input type="hidden" name="publicId" value="@Model.First().Folder_ID" />
            <input type="search" name="searchTerm" />
            <input type="submit" value="Search" />
        </form>*@ <!--Should do using html helpers over basic html-->

        @*@using (Html.BeginForm("Index", "PublicVM", FormMethod.Get)) {
            @Html.Hidden("Folder_Id")
            @Html.TextBox("searchTerm")
            <input type="submit" value="Search" />
        }*@

        @Html.Partial("_PublicTable", Model)

    </div>
</div>

@section CustomScripts{
    <script>
        (function () {
            $('#category_policy_toggle').click(function () {
                $("#category_list, #policy_list").toggleClass("hidden");
            })
        })();
    </script>  
}